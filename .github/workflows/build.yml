name: Build

on:
  pull_request:
    branches:
    - '*'
  push:
    branches:
    - '*'
  release:
    types:
      - published

defaults:
  run:
    shell: bash -l -eo pipefail {0}

jobs:
  build:
    name: Build ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Setup micromamba
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-file: .github/environment.yml
        extra-specs: |
          python=${{ matrix.python-version }}

    - name: Install
      shell: bash -l {0}
      run: SKBUILD_CONFIGURE_OPTIONS="-DWITH_TESTS=ON" pip install -e .

    - name: Test
      shell: bash -l {0}
      env:
        EXT: ${{ matrix.os == 'windows-latest' && '.exe' || '' }}
      run: |
        export PYTHONHOME=$CONDA_PREFIX
        export PDAL_DRIVER_PATH=$(python -c "import os, skbuild; print(os.path.join(skbuild.constants.SKBUILD_DIR(), 'cmake-build'))")
        pdal --drivers
        $PDAL_DRIVER_PATH/pdal_filters_python_test$EXT
        $PDAL_DRIVER_PATH/pdal_io_numpy_test$EXT

  dist:
    name: Distribution
    needs: [build]

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        channels: conda-forge
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"

    - name: Dependencies
      shell: bash -l {0}
      run: mamba install --yes --quiet -c conda-forge scikit-build numpy python=${{ matrix.python-version }} pybind11 pdal

    - name: sdist
      shell: bash -l {0}
      run: |
        python setup.py sdist
        ls dist

    - uses: pypa/gh-action-pypi-publish@master
      name: Publish package
      if: github.event_name == 'release' && github.event.action == 'published'
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
        packages_dir: ./dist
